N <- nrow(df)
df <- df[sample(N), ]
num <- floor(N/size)
size=10 # leave-10-out CV
num <- floor(N/size)
num
rest <- N - num * size
rest
N/size
ncv <- cumsum(c(rep(size,num), rest))
ncv
predictions <- data.frame(survived = df$survived, pred = NA)
size
n = ncv[1]
n
v <- rep(TRUE, N)
v[(n-size+1):n] <- FALSE
v
lr <- glm(survived ~ ., data = df[v,], family = binomial(logit))
lr
predict(lr, newdata = df[!v, ])
predict(lr, newdata = df[!v, ], type = "response")
?predict
log(0.13/0.87)
log(0.136/0.864)
predictions <- data.frame(survived = df$survived, pred = NA)
for(n in ncv) {
v <- rep(TRUE, N)
v[(n-size+1):n] <- FALSE
lr <- glm(survived ~ ., data = df[v,], family = binomial(logit))
predictions[!v,"pred"] <- predict(lr, newdata=df[!v,], type="response")
# type = "resposne" gives predicted probabilities
# default is the linear predictors (log-odds of the probabilities)
}
v <- rep(NA, nrow(predictions))
v
ggplot(data= predictions, aes(x=survived, y=pred)) +
geom_violin(fill=rgb(1,1,1,alpha=0.6), color=NA) +
geom_jitter(aes(color=pred_type), alpha=0.6) +
geom_hline(yintercept=threshold, color="red", alpha=0.6) +
scale_color_discrete(name = "type") +
labs(title=sprintf("Threshold at %.2f", threshold))
threshold = 0.7
ggplot(data= predictions, aes(x=survived, y=pred)) +
geom_violin(fill=rgb(1,1,1,alpha=0.6), color=NA) +
geom_jitter(aes(color=pred_type), alpha=0.6) +
geom_hline(yintercept=threshold, color="red", alpha=0.6) +
scale_color_discrete(name = "type") +
labs(title=sprintf("Threshold at %.2f", threshold))
v <- rep(NA, nrow(predictions))
v <- ifelse(predictions$pred >= threshold & predictions$survived == 1, "TP", v)
v <- ifelse(predictions$pred >= threshold & predictions$survived == 0, "FP", v)
v <- ifelse(predictions$pred < threshold & predictions$survived == 1, "FN", v)
v <- ifelse(predictions$pred < threshold & predictions$survived == 0, "TN", v)
predictions$pred_type <- v
ggplot(data= predictions, aes(x=survived, y=pred)) +
geom_violin(fill=rgb(1,1,1,alpha=0.6), color=NA) +
geom_jitter(aes(color=pred_type), alpha=0.6) +
scale_color_discrete(name = "type") +
labs(title=sprintf("Threshold at %.2f", threshold))
pROC::auc(predictions$survived, predictions$pred)
?auc
library(data.table)
dt = fread("~/bitbucket/myrefs/summ20_tab.txt", data.table = T)
head(dt)
dt$net = as.factor(dt$net)
ggplot(dt, aes(x = t, y = edges, color = net)) + geom_line(alpha=0.3) + theme(legend.position="none")
library(ggplot2)
ggplot(dt, aes(x = t, y = edges, color = net)) + geom_line(alpha=0.3) + theme(legend.position="none")
ggplot(dt, aes(x = t, y = BIC, color = net)) + geom_line(alpha=0.3) + theme(legend.position="none")
summary(lm(BIC~t, data = dt))$coefficients
summary(lm(edges~t, data = dt))$coefficients
summary(lm(BIC~t, data = dt[t>50,]))$coefficients
summary(lm(edges~t, data = dt[t>50,]))$coefficients
n = dt[,length(unique(t))]
dim(n)
n
head(dt)
m = dt[,length(unique(net))]
m = dt[,length(unique(net))]
m
W = dt[,.(varX = var(get(X))), by=net][,mean(varX)]
X = "BIC"
W = dt[,.(varX = var(get(X))), by=net][,mean(varX)]
W
Bn = dt[,.(meanX = mean(get(X))), by=net][,var(meanX)]
Bn
sig = (n-1)*W/n + Bn
sig
W
W = sapply(1:m, function(x) var(dt$BIC[dt$net == x]))
W
W = sapply(0:m-1, function(x) var(dt$BIC[dt$net == x]))
W
head(dt)
W = sapply(0:(m-1), function(x) var(dt$BIC[dt$net == x]))
W
W = sapply(0:(m-1), function(x) var(dt$BIC[dt$net == x])) %>% mean
library(dplyr)
W = sapply(0:(m-1), function(x) var(dt$BIC[dt$net == x])) %>% mean
W
W = dt[,.(varX = var(get(X))), by=net][,mean(varX)]
W
m = length(unique(dt$net))
m
n = length(unique(dt$t))
n
70 * 100
7000 / 20
B = sapply(0:(m-1), function(x) mean(dt$BIC[dt$net == x])) %>% var # within network variance over the walk
B
Bn
sig = (n-1)*W/n + B
sig
V = sig + B/m
V
V/W
B/W
(n-1) * W / n
sig
B
B / m
n
W = sapply(0:(m-1), function(x) var(dt$edges[dt$net == x])) %>% mean # within network variance
Bn = sapply(0:(m-1), function(x) mean(dt$edges[dt$net == x])) %>% var #
sig = (n-1)*W/n + Bn
V = sig + Bn/m # between network variance
V/W
W
V
Bn
load(file = "/Users/xwang/Projects/roche34/otf/myfs1.rdt")
rm(list = ls())
load(file = "/Users/xwang/Projects/roche34/otf/myfs1.rdt")
library(dplyr)
library(igraph)
library(venneuler)
library(venneuler)
library(xlsx)
library(venneuler)
library(xlsx)
library(reshape2)
head(myfs1.res)
ggout = ggplot(myfs1.res, aes(x = output, fill = condition)) +
scale_colour_brewer(palette="Set1") + scale_fill_brewer(palette="Set1") +
geom_density(alpha=0, aes(colour = condition), size = 1) +
geom_histogram(aes(y = ..density..), binwidth = .4, alpha = .5, position = "identity", linetype = 0) +
theme_bw() +
facet_wrap(~ Variable_Pert, scale = "free_y", nrow = 3) +
theme(legend.position="bottom", legend.justification="right",
legend.background = element_rect(colour = 'black', fill = 'white', size = 0.3, linetype='solid')) +
xlab("Posterior distribution of AR Expression under different perturbation
conditions")
ggout
load(file = "/Users/xwang/Projects/roche34/otf/myfs1.rdt")
subject = 1
scp starmaster:~/roche34/otf/myfs1.rdt ~/Projects/roche34/otf/
gdt = myfs1[myfs1$fixedDataRow == subject, ]
ggout = ggplot(gdt, aes(x = output, fill = condition)) +
scale_colour_brewer(palette="Set1") + scale_fill_brewer(palette="Set1") +
geom_density(alpha=0, aes(colour = condition), size = 1) +
geom_histogram(aes(y = ..density..), binwidth = .4, alpha = .5, position = "identity", linetype = 0) +
theme_bw() +
facet_wrap(~ Variable_Pert, scale = "free_y", nrow = 3) +
theme(legend.position="bottom", legend.justification="right",
legend.background = element_rect(colour = 'black', fill = 'white', size = 0.3, linetype='solid')) +
xlab("Posterior distribution of PFS under the 2 treatment arms")
ggout
gdt
summary(gdt$output)
gdt$output = log2(gdt$output + 1)
ggout = ggplot(gdt, aes(x = output, fill = condition)) +
scale_colour_brewer(palette="Set1") + scale_fill_brewer(palette="Set1") +
geom_density(alpha=0, aes(colour = condition), size = 1) +
geom_histogram(aes(y = ..density..), binwidth = .4, alpha = .5, position = "identity", linetype = 0) +
theme_bw() +
facet_wrap(~ Variable_Pert, scale = "free_y", nrow = 3) +
theme(legend.position="bottom", legend.justification="right",
legend.background = element_rect(colour = 'black', fill = 'white', size = 0.3, linetype='solid')) +
xlab("Posterior distribution of PFS under the two treatment arms")
ggout
myfs1$condition = factor(myfs1$condition, levels = c("R", "G"))
gdt = myfs1[myfs1$fixedDataRow == subject, ]
gdt$output = log2(gdt$output + 1)
ggout = ggplot(gdt, aes(x = output, fill = condition)) +
scale_colour_brewer(palette="Set1") + scale_fill_brewer(palette="Set1") +
geom_density(alpha=0, aes(colour = condition), size = 1) +
geom_histogram(aes(y = ..density..), binwidth = .4, alpha = .5, position = "identity", linetype = 0) +
theme_bw() +
facet_wrap(~ Variable_Pert, scale = "free_y", nrow = 3) +
theme(legend.position="bottom", legend.justification="right",
legend.background = element_rect(colour = 'black', fill = 'white', size = 0.3, linetype='solid')) +
xlab("Posterior distribution of PFS under the two treatment arms")
ggout
pdf(file = "~/Projects/roche34/forward/fs1.pdf")
for(subject in unique(myfs1$fixedDataRow)) {
gdt = myfs1[myfs1$fixedDataRow == subject, ]
gdt$output = log2(gdt$output + 1)
ggout = ggplot(gdt, aes(x = output, fill = condition)) +
scale_colour_brewer(palette="Set1") + scale_fill_brewer(palette="Set1") +
geom_density(alpha=0, aes(colour = condition), size = 1) +
geom_histogram(aes(y = ..density..), binwidth = .4, alpha = .5, position = "identity", linetype = 0) +
theme_bw() +
facet_wrap(~ Variable_Pert, scale = "free_y", nrow = 3) +
theme(legend.position="bottom", legend.justification="right",
legend.background = element_rect(colour = 'black', fill = 'white', size = 0.3, linetype='solid')) +
xlab("Posterior distribution of PFS under the two treatment arms")
ggout
}
dev.off()
pdf(file = "~/Projects/roche34/forward/fs1.pdf")
# for(subject in unique(myfs1$fixedDataRow)) { cat(subject, "\n")
for(subject in 1:3) { cat(subject, "\n")
gdt = myfs1[myfs1$fixedDataRow == subject, ]
gdt$output = log2(gdt$output + 1)
ggout = ggplot(gdt, aes(x = output, fill = condition)) +
scale_colour_brewer(palette="Set1") + scale_fill_brewer(palette="Set1") +
geom_density(alpha=0, aes(colour = condition), size = 1) +
geom_histogram(aes(y = ..density..), binwidth = .4, alpha = .5, position = "identity", linetype = 0) +
theme_bw() +
facet_wrap(~ Variable_Pert, scale = "free_y", nrow = 3) +
theme(legend.position="bottom", legend.justification="right",
legend.background = element_rect(colour = 'black', fill = 'white', size = 0.3, linetype='solid')) +
xlab("Posterior distribution of PFS under the two treatment arms")
ggout
}
dev.off()
dev.off()
pdf(file = "~/Projects/roche34/forward/fs1.pdf")
# for(subject in unique(myfs1$fixedDataRow)) { cat(subject, "\n")
for(subject in 1) { cat(subject, "\n")
gdt = myfs1[myfs1$fixedDataRow == subject, ]
gdt$output = log2(gdt$output + 1)
ggout = ggplot(gdt, aes(x = output, fill = condition)) +
scale_colour_brewer(palette="Set1") + scale_fill_brewer(palette="Set1") +
geom_density(alpha=0, aes(colour = condition), size = 1) +
geom_histogram(aes(y = ..density..), binwidth = .4, alpha = .5, position = "identity", linetype = 0) +
theme_bw() +
facet_wrap(~ Variable_Pert, scale = "free_y", nrow = 3) +
theme(legend.position="bottom", legend.justification="right",
legend.background = element_rect(colour = 'black', fill = 'white', size = 0.3, linetype='solid')) +
xlab("Posterior distribution of PFS under the two treatment arms")
ggout
}
dev.off()
pdf(file = "~/Projects/roche34/forward/fs1.pdf")
gdt = myfs1[myfs1$fixedDataRow == subject, ]
gdt$output = log2(gdt$output + 1)
ggout = ggplot(gdt, aes(x = output, fill = condition)) +
scale_colour_brewer(palette="Set1") + scale_fill_brewer(palette="Set1") +
geom_density(alpha=0, aes(colour = condition), size = 1) +
geom_histogram(aes(y = ..density..), binwidth = .4, alpha = .5, position = "identity", linetype = 0) +
theme_bw() +
facet_wrap(~ Variable_Pert, scale = "free_y", nrow = 3) +
theme(legend.position="bottom", legend.justification="right",
legend.background = element_rect(colour = 'black', fill = 'white', size = 0.3, linetype='solid')) +
xlab("Posterior distribution of PFS under the two treatment arms")
ggout
dev.off()
subject
pdf(file = "~/Projects/roche34/forward/fs1.pdf")
# for(subject in unique(myfs1$fixedDataRow)) { cat(subject, "\n")
# for(subject in 1) { cat(subject, "\n")
gdt = myfs1[myfs1$fixedDataRow == subject, ]
gdt$output = log2(gdt$output + 1)
ggout = ggplot(gdt, aes(x = output, fill = condition)) +
scale_colour_brewer(palette="Set1") + scale_fill_brewer(palette="Set1") +
geom_density(alpha=0, aes(colour = condition), size = 1) +
geom_histogram(aes(y = ..density..), binwidth = .4, alpha = .5, position = "identity", linetype = 0) +
theme_bw() +
facet_wrap(~ Variable_Pert, scale = "free_y", nrow = 3) +
theme(legend.position="bottom", legend.justification="right",
legend.background = element_rect(colour = 'black', fill = 'white', size = 0.3, linetype='solid')) +
xlab("Posterior distribution of PFS under the two treatment arms")
ggout
# }
dev.off()
head(myfs1)
pdf(file = "~/Projects/roche34/forward/fs1.pdf")
# for(subject in unique(myfs1$fixedDataRow)) { cat(subject, "\n")
# for(subject in 1) { cat(subject, "\n")
gdt = myfs1[myfs1$fixedDataRow == subject, ]
gdt$output = log2(gdt$output + 1)
ggout = ggplot(gdt, aes(x = output, fill = condition)) +
scale_colour_brewer(palette="Set1") + scale_fill_brewer(palette="Set1") +
geom_density(alpha=0, aes(colour = condition), size = 1) +
geom_histogram(aes(y = ..density..), binwidth = .4, alpha = .5, position = "identity", linetype = 0) +
theme_bw() +
#   facet_wrap(~ Variable_Pert, scale = "free_y", nrow = 3) +
theme(legend.position="bottom", legend.justification="right",
legend.background = element_rect(colour = 'black', fill = 'white', size = 0.3, linetype='solid')) +
xlab("Posterior distribution of PFS under the two treatment arms")
ggout
# }
dev.off()
pdf(file = "~/Projects/roche34/forward/fs1.pdf")
# for(subject in unique(myfs1$fixedDataRow)) { cat(subject, "\n")
for(subject in 1) { cat(subject, "\n")
gdt = myfs1[myfs1$fixedDataRow == subject, ]
gdt$output = log2(gdt$output + 1)
ggout = ggplot(gdt, aes(x = output, fill = condition)) +
scale_colour_brewer(palette="Set1") + scale_fill_brewer(palette="Set1") +
geom_density(alpha=0, aes(colour = condition), size = 1) +
geom_histogram(aes(y = ..density..), binwidth = .4, alpha = .5, position = "identity", linetype = 0) +
theme_bw() +
#   facet_wrap(~ Variable_Pert, scale = "free_y", nrow = 3) +
theme(legend.position="bottom", legend.justification="right",
legend.background = element_rect(colour = 'black', fill = 'white', size = 0.3, linetype='solid')) +
xlab("Posterior distribution of PFS under the two treatment arms")
ggout
}
dev.off()
pdf(file = "~/Projects/roche34/forward/fs1.pdf")
# for(subject in unique(myfs1$fixedDataRow)) { cat(subject, "\n")
for(subject in 1) { cat(subject, "\n")
gdt = myfs1[myfs1$fixedDataRow == subject, ]
gdt$output = log2(gdt$output + 1)
ggout = ggplot(gdt, aes(x = output, fill = condition)) +
scale_colour_brewer(palette="Set1") + scale_fill_brewer(palette="Set1") +
geom_density(alpha=0, aes(colour = condition), size = 1) +
geom_histogram(aes(y = ..density..), binwidth = .4, alpha = .5, position = "identity", linetype = 0) +
theme_bw() +
#   facet_wrap(~ Variable_Pert, scale = "free_y", nrow = 3) +
theme(legend.position="bottom", legend.justification="right",
legend.background = element_rect(colour = 'black', fill = 'white', size = 0.3, linetype='solid')) +
xlab("Posterior distribution of PFS under the two treatment arms")
print(ggout)
}
dev.off()
pdf(file = "~/Projects/roche34/forward/fs1.pdf")
for(subject in unique(myfs1$fixedDataRow)) { cat(subject, "\n")
gdt = myfs1[myfs1$fixedDataRow == subject, ]
gdt$output = log2(gdt$output + 1)
ggout = ggplot(gdt, aes(x = output, fill = condition)) +
scale_colour_brewer(palette="Set1") + scale_fill_brewer(palette="Set1") +
geom_density(alpha=0, aes(colour = condition), size = 1) +
geom_histogram(aes(y = ..density..), binwidth = .4, alpha = .5, position = "identity", linetype = 0) +
theme_bw() + ggtitle(paste("Subject", subject)) +
#   facet_wrap(~ Variable_Pert, scale = "free_y", nrow = 3) +
theme(legend.position="bottom", legend.justification="right",
legend.background = element_rect(colour = 'black', fill = 'white', size = 0.3, linetype='solid')) +
xlab("Posterior distribution of PFS under the two treatment arms")
print(ggout)
}
dev.off()
load(file = "/Users/xwang/Projects/roche34/otf/myfs1.rdt")
myfs1$condition = factor(myfs1$condition, levels = c("R", "G"))
pdf(file = "~/Projects/roche34/forward/fs1.pdf")
for(subject in unique(myfs1$fixedDataRow)) { cat(subject, "\n")
gdt = myfs1[myfs1$fixedDataRow == subject, ]
gdt$output = log2(gdt$output + 1)
ggout = ggplot(gdt, aes(x = output, fill = condition)) +
scale_colour_brewer(palette="Set1") + scale_fill_brewer(palette="Set1") +
geom_density(alpha=0, aes(colour = condition), size = 1) +
geom_histogram(aes(y = ..density..), binwidth = .4, alpha = .5, position = "identity", linetype = 0) +
theme_bw() + ggtitle(paste("Subject", subject)) +
#   facet_wrap(~ Variable_Pert, scale = "free_y", nrow = 3) +
theme(legend.position="bottom", legend.justification="right",
legend.background = element_rect(colour = 'black', fill = 'white', size = 0.3, linetype='solid')) +
xlab("Posterior distribution of PFS under the two treatment arms")
print(ggout)
}
dev.off()
head(myfs1)
library(ggplot2)
load(file = "/Users/xwang/Projects/roche34/otf/myfs1.rdt")
load(file = "/Users/xwang/Projects/roche34/otf/myfs1.rdt")
load(file = "/Users/xwang/Projects/roche34/otf/myfs1.rdt")
myfs1$condition = factor(myfs1$condition, levels = c("R", "G"))
head(myfs1)
x = "R"
sapply(unique(fixedDataRow), function(xx) median(y1$output[y1$fixedDataRow == xx]))
sapply(unique(y1$fixedDataRow), function(xx) median(y1$output[y1$fixedDataRow == xx]))
y1 = myfs1[myfs1$condition == x, ]
dim(y1)
dim(myfs1)
sapply(unique(y1$fixedDataRow), function(xx) median(y1$output[y1$fixedDataRow == xx]))
myout = sapply(c("R", "G"), function(x) {
y1 = myfs1[myfs1$condition == x, ]
sapply(unique(y1$fixedDataRow), function(xx) median(y1$output[y1$fixedDataRow == xx]))
})
dim(myout)
head(myout)
myout = as.data.frame(myout)
head(myout)
myout$pval = pval
head(myout)
myout$P-val = pval
myout$P.val = pval
myout$pval = NULL
head(myout)
write.xlsx(file = "/Users/xwang/Projects/roche34/report_otf.xlsx", sheetName = "Model 1 - PFS", append = T)
library(xlsx)
write.xlsx(file = "/Users/xwang/Projects/roche34/report_otf.xlsx", sheetName = "Model 1 - PFS", append = T)
write.xlsx(myout, file = "/Users/xwang/Projects/roche34/report_otf.xlsx", sheetName = "Model 1 - PFS", append = T)
load(file = "/Users/xwang/Projects/roche34/otf/myfs2.rdt")
rm(list = ls())
load(file = "/Users/xwang/Projects/roche34/otf/myfs2.rdt")
myfs1$condition = factor(myfs1$condition, levels = c("R", "G"))
myout = sapply(c("R", "G"), function(x) {
y1 = myfs1[myfs1$condition == x, ]
sapply(unique(y1$fixedDataRow), function(xx) median(y1$output[y1$fixedDataRow == xx]))
})
myout = as.data.frame(myout)
myout$P.val = pval
write.xlsx(myout, file = "/Users/xwang/Projects/roche34/report_otf.xlsx", sheetName = "Model 1 - OS", append = T)
rm(list = ls())
load(file = "/Users/xwang/Projects/roche34/otf/myfs3.rdt")
load(file = "/Users/xwang/Projects/roche34/otf/myfs3.rdt")
myfs1$condition = factor(myfs1$condition, levels = c("R", "G"))
head(myfs1)
myout = sapply(c("R", "G"), function(x) {
y1 = myfs1[myfs1$condition == x, ]
# sapply(unique(y1$fixedDataRow), function(xx) median(y1$output[y1$fixedDataRow == xx]))
sapply(unique(y1$fixedDataRow), function(xx) median(y1$pmf[y1$fixedDataRow == xx]))
})
head(myout)
myout = as.data.frame(myout)
myout$P.val = pval
write.xlsx(myout, file = "/Users/xwang/Projects/roche34/report_otf.xlsx", sheetName = "Model 1 - OR", append = T)
pnorm(1, 1)
?pnorm
pnorm(1, 0, 1)
1 - pnorm(1, 0, 1)
pnorm(0, 1, 1)
load("/Users/xwang/Projects/roche34/otf/clist.rdt")
library(reshape2)
library(ggplot2)
load("/Users/xwang/Projects/roche34/otf/clist.rdt")
rm(list = ls())
load("/Users/xwang/Projects/roche34/otf/clist.rdt")
os = clist$os
pfs = clist$pfs
head(os)
length(os)
head(os[[1]])
dim(os[[1]])
sapply(os, function(x) apply(x, 2, median))
os.long = do.call(rbind, os)
apply(os.long, 2, median)
pfs.long = do.call(rbind, pfs)
apply(pfs.long, 2, median)
pnorm(0, 1, 1)
pnorm(1, 0, 1)
1 - pnorm(1, 0, 1)
apply(os.long, 2, median)
pfs.long = do.call(rbind, pfs)
apply(pfs.long, 2, median)
rm(list = ls())
load(file = "/Users/xwang/Projects/roche34/otf/myfs3.rdt")
head(myfs1)
summary(myfs1$pmf)
myfs1$condition = factor(myfs1$condition, levels = c("R", "G"))
myout = sapply(c("R", "G"), function(x) {
y1 = myfs1[myfs1$condition == x, ]
# sapply(unique(y1$fixedDataRow), function(xx) median(y1$output[y1$fixedDataRow == xx]))
sapply(unique(y1$fixedDataRow), function(xx) median(y1$pmf[y1$fixedDataRow == xx]))
})
myout = as.data.frame(myout)
head(myout)
myout
xx = myfs1[myfs1$fixedDataRow == 369, ]
load(file = "/Users/xwang/Projects/roche34/R/roche_q3_rnaseq.rdt")
load(file = "/Users/xwang/Projects/roche34/R/roche_q3_refsdf.rdt")
which(refsdf.c1$or_OR == 2)
head(xx)
yy = which(refsdf.c1$or_OR == 2)
myout[yy, ]
myout = as.data.frame(myout)
myout$P.val = pval
myout = myout[refsdf.c1$or_OR != 2, ]
dim(myout)
write.xlsx(myout, file = "/Users/xwang/Projects/roche34/report_otf.xlsx", sheetName = "Model 1 - OR", append = T)
load("/home/xwang/roche34/data/roche_q3_refsdf.rdt")
load("/Users/xwang/Projects/roche34/R/roche_q3_asl2.rdt")
table(myasl2$REG)
table(myasl2$ETHNIC)
rm(list = ls())
load("/Users/xwang/Projects/roche34/otf/edgeAll.rdt") # 0.2 cutoff
edges = edgeAll$m1
edges.ooi = edges %>% filter(grepl("^pfs_|^or_|^os_", output))
library(dplyr)
library(igraph)
library(xlsx)
edges.ooi = edges %>% filter(grepl("^pfs_|^or_|^os_", output))
edges = edgeAll$m1
head(edges)
head(edgeAll$m1())
load("/Users/xwang/Projects/roche34/otf/edgeAll.rdt") # 0.2 cutoff
edges = edgeAll$m1
edges.ooi = edges %>% filter(grepl("^pfs_|^or_|^os_", output))
write.xlsx(edges, file = "/Users/xwang/Projects/roche34/otf/report_otf.xlsx", sheetName = "Model 1", append = T)
write.xlsx(edges.ooi, file = "/Users/xwang/Projects/roche34/otf/report_otf.xlsx", sheetName = "Model 1 - outcomes", append = T)
edges = edgeAll$m2
edges.ooi = edges %>% filter(grepl("^pfs_|^or_|^os_", output))
write.xlsx(edges, file = "/Users/xwang/Projects/roche34/otf/report_otf.xlsx", sheetName = "Model 2", append = T)
write.xlsx(edges.ooi, file = "/Users/xwang/Projects/roche34/otf/report_otf.xlsx", sheetName = "Model 2 - outcomes", append = T)
edges = edgeAll$m4
edges.ooi = edges %>% filter(grepl("^pfs_|^or_|^os_", output))
write.xlsx(edges, file = "/Users/xwang/Projects/roche34/otf/report_otf.xlsx", sheetName = "Model 4", append = T)
write.xlsx(edges.ooi, file = "/Users/xwang/Projects/roche34/otf/report_otf.xlsx", sheetName = "Model 4 - outcomes", append = T)
load("~/Projects/roche34/otf/alldata.rdt")
setdiff(names(refsdf.c2), names(refsdf.c1))
setdiff(names(refsdf.c1), names(refsdf.c2))
?pnorm
library(rstan)
rm(list = ls())
setwd("~/gitHub/Genetics/rstan")
stan.lm <- stan_model("prior.stan")
stan.lm <- stan_model("./prior.stan")
file = "~/bitbucket/mydag/gaussian.stan"
mymodel = stan_model(file, model_name = "occam-1")
